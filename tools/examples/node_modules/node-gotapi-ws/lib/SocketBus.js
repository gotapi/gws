"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var MsgCodec_1 = __importDefault(require("./MsgCodec"));
var MessageType_1 = __importDefault(require("./MessageType"));
var MessageCommand_1 = __importDefault(require("./MessageCommand"));
var UuidGenerator_1 = __importDefault(require("./UuidGenerator"));
var MessageBody_1 = __importDefault(require("./MessageBody"));
var WebSocket = require("ws");
var SocketBus = /** @class */ (function () {
    function SocketBus(websocketAddr) {
        this.closed = false;
        this.websocketAddr = websocketAddr;
        this._id = "SocketBus-" + UuidGenerator_1.default.generate() + "." + websocketAddr;
        var self = this;
        self.onConnect = function () { };
        self.timer = setInterval(function () {
            self.pingpong();
        }, 3000);
    }
    SocketBus.prototype.pingpong = function () {
        var messagePingPong = {
            type: MessageType_1.default.Command,
            command: MessageCommand_1.default.PINGPONG,
            uuid: UuidGenerator_1.default.generate(),
            body: new MessageBody_1.default("")
        };
        this.send(messagePingPong);
    };
    SocketBus.prototype.send = function (data) {
        try {
            this.ws.send(MsgCodec_1.default.encode(data));
        }
        catch (e) {
            if (this.ws.readyState != 1) {
                console.debug("got exception :");
                console.debug(e);
                this.connect();
            }
        }
    };
    SocketBus.prototype.connect = function () {
        var self = this;
        if (self.closed) {
            return;
        }
        if (self.ws && self.ws.readyState == 1) {
            console.debug("already  connected:" + self._id);
            return;
        }
        if (self.ws && self.ws.readyState == 0) {
            console.debug("already connection..." + self._id);
            return;
        }
        console.debug("connecting");
        self.ws = new WebSocket(this.websocketAddr);
        self.ws.onopen = function () {
            console.debug("... connected!" + self._id);
            self.onConnect();
        };
        self.ws.onclose = function (evt) {
            console.debug("ws closed:" + self._id);
            self.connect();
        };
        self.ws.onmessage = function (evt) {
            //console.log("new msg:");
            //console.log(evt);  
            console.debug("got msg of :" + self._id);
            self.onMsg(evt.data);
        };
        //self.ws.onclose = self.onClose;
    };
    SocketBus.prototype.close = function () {
        this.closed = true;
        clearInterval(this.timer);
        this.ws.close();
    };
    return SocketBus;
}());
exports.default = SocketBus;
